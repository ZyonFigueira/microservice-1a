name: deploy-hml

on:
  push:
    branches:
      - main 

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up AWS CLI
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Adjust the region as needed

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.2.5"  # You can set a specific version

    # Build Docker image and push to AWS ECR
    - name: Build and push Docker image to ECR
      env:
        ECR_REPO_NAME: 879381271270.dkr.ecr.us-east-1.amazonaws.com/bff-gateway
        AWS_REGION: us-east-1
      run: |
        # Authenticate Docker to AWS ECR
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO_NAME

        # Build Docker image
        docker build -t $ECR_REPO_NAME .

        # Tag the Docker image
        docker tag $ECR_REPO_NAME:latest $ECR_REPO_NAME/$ECR_REPO_NAME:latest

        # Push the Docker image to ECR
        docker push $ECR_REPO_NAME/$ECR_REPO_NAME:latest

    # # Deploy using Terraform
    # - name: Initialize Terraform
    #   run: terraform init

    # - name: Apply Terraform
    #   run: terraform apply -auto-approve

    # # Clean up Docker images after deployment (optional)
    # - name: Clean up Docker images
    #   run: |
    #     docker rmi $ECR_REPO_NAME:latest
    #     docker rmi $ECR_REPO_NAME/$ECR_REPO_NAME:latest
